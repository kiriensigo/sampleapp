name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'bgr-v2/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Run type check
      run: |
        cd bgr-v2
        npx tsc --noEmit
        
    - name: Run lint
      run: |
        cd bgr-v2
        npm run lint
        
    - name: Run tests
      run: |
        cd bgr-v2
        npm test -- --coverage --watchAll=false
      env:
        CI: true
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: bgr-v2/coverage
        fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'bgr-v2/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Build application
      run: |
        cd bgr-v2
        npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: bgr-v2/.next
        retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'bgr-v2/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Run security audit
      run: |
        cd bgr-v2
        npm audit --audit-level=high
        
    - name: Run dependency check
      uses: ossf/scorecard-action@v2.3.1
      with:
        results_file: results.sarif
        results_format: sarif
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        publish_results: false

  preview-deploy:
    name: Preview Deploy
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'pull_request'
    environment: preview
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'bgr-v2/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Build for Preview
      run: |
        cd bgr-v2
        npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
        
    - name: Deploy Preview to Netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=bgr-v2/out --functions=bgr-v2/netlify/functions --alias=pr-${{ github.event.number }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    - name: Comment PR with Preview URL
      uses: actions/github-script@v6
      with:
        script: |
          const prNumber = context.issue.number;
          const previewUrl = `https://pr-${prNumber}--bgrq.netlify.app`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸŽ‰ Preview deployment ready!

ðŸ“± **Preview URL**: ${previewUrl}

âœ¨ This preview will be updated automatically when you push new changes to this PR.`
          });

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Netlify (Staging)
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=bgr-v2/out --functions=bgr-v2/netlify/functions
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Netlify (Production)
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=bgr-v2/out --functions=bgr-v2/netlify/functions
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'bgr-v2/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Install Playwright
      run: |
        cd bgr-v2
        npx playwright install --with-deps
        
    - name: Run E2E tests
      run: |
        cd bgr-v2
        npm run test:e2e
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        
    - name: Upload E2E test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: bgr-v2/playwright-report/
        retention-days: 30